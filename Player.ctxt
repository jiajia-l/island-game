#BlueJ class context
comment0.params=
comment0.target=Player()
comment1.params=
comment1.target=void\ act()
comment1.text=\n\ Act\ -\ do\ whatever\ the\ Player\ wants\ to\ do.\ This\ method\ \ is\ called\ whenever\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\n\n
comment10.params=dist
comment10.target=void\ verticalMove(int)
comment10.text=\n\ verticalMove\ moves\ the\ player\ when\ standing\ on\ an\ up-down\ elevator\n
comment11.params=
comment11.target=void\ moveRight()
comment12.params=
comment12.target=void\ moveLeft()
comment13.params=
comment13.target=boolean\ checkLeft()
comment13.text=\n\ Left\ and\ then\ Right\ facing\ collision\ detection.\n\ Uses\ a\ loop\ to\ check\ for\ an\ offset\ object\ to\ either\ side\ up\ to\n\ 1/2\ the\ height\ of\ the\ the\ playerin\n
comment14.params=
comment14.target=boolean\ checkRight()
comment15.params=
comment15.target=Enemy\ getEnemy()
comment15.text=\n\ Enemy\ getEnemy()\n\ This\ method\ checks\ collision\ with\ Enemy\ objects.\n
comment16.params=
comment16.target=boolean\ eat()
comment17.params=dist
comment17.target=void\ tryMove(int)
comment17.text=\n\ tryMove(int)\n\ This\ method\ is\ called\ by\ MyWorld\ for\ the\ purposes\ of\ moving\ the\ player\ when\ the\n\ player\ is\ standing\ on\ a\ moving\ platform.Gets\ a\ positive\ distance\ for\ rightwards\n\ movement\ or\ a\ negative\ distance\ for\ left\n\ movement.\ Checks\ for\ collisions\ with\ the\ side\ of\ surfaces,\ and\ makes\ sure\ the\ player\n\ is\ allowed\ to\ move.\ If\ so,\ this\ method\ performs\ the\ automatic\ (not\ player\ controlled)\ \n\ moving.\n
comment18.params=
comment18.target=void\ death()
comment19.params=
comment19.target=boolean\ checkDeath()
comment2.params=
comment2.target=void\ attack()
comment20.params=value
comment20.target=void\ setHealth(int)
comment21.params=
comment21.target=int\ getHealth()
comment3.params=
comment3.target=void\ checkKeys()
comment4.params=
comment4.target=boolean\ onGround()
comment4.text=\n\ Improved\ onGround\ method\ avoids\ falling\ through\ floors\ due\ to\ high\ fall\ speed.\ Looks\n\ up\ to\ vSpeed\ pixes\ below\ P\ for\ a\ platform.\ \n
comment5.params=
comment5.target=greenfoot.Actor\ getSurface()
comment5.text=\ Actor\ getSurface()\ method\n\ Returns\ a\ surface\ that\ the\ player\ is\ on\ (or\ null).\ This\ is\ used\ by\ MyWorld\ to\ do\ automatic\n\ movement\ if\ the\ player\ is\ standing\ on\ a\ moving\ platform\n
comment6.params=
comment6.target=void\ jump()
comment6.text=\n\ Provided\ jump()\ method.\ Only\ addition\ is\ jumping\ \=\ true\ which\ is\ part\ of\ a\ system\ which\ prevents\n\ jumping\ while\ already\ mid-jump\n
comment7.params=
comment7.target=void\ checkFall()
comment7.text=\n\ Provided\ checkFall()\ method.\ Updated\ to\ set\ jumping\ to\ false\ if\ the\ player\ is\ on\ the\ ground,\n\ thus\ allowing\ the\ player\ to\ jump\ again.\n
comment8.params=
comment8.target=void\ fall()
comment8.text=\ fall()\n\ Exactly\ as\ provided\ by\ sample.\n
comment9.params=
comment9.target=void\ checkNextScene()
comment9.text=\ Check\ whether\ we\ should\ go\ to\ the\ next\ Scene,\ and\ if\ yes,\ start\ the\ next\ Scene.\n
numComments=22
